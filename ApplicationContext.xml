

<?xml  version="1.0" encoding="UTF-8"?>
<beans >"http://www.springframework.org/schema/beans"
    >"http://www.w3.org/2001/XMLSchema-instance" >"http://www.springframework.org/schema/aop"
    >"http://www.springframework.org/schema/context"
    >"http://www.springframework.org/schema/mvc" >"http://www.springframework.org/schema/jee"
    >"http://www.springframework.org/schema/lang" >"http://www.springframework.org/schema/p"
    >"http://www.springframework.org/schema/tx" >"http://www.springframework.org/schema/util"
    >"http://www.springframework.org/schema/jdbc" >"http://www.springframework.org/schema/security"

    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
    http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


    <context:annotation-config />
    <context:component-scan base-package="fr.treeptik" />

    <!-- CONFIGURATION SPRING -->
    <!-- ... -->
    <!-- ... -->
    <!-- ... -->
    <!-- ... -->
    <!-- ... -->
    <!-- CONFIGURATION SPRING AOP -->

    <!-- Création d'un nouveau bean indiquant la classe qui va gérer nos aspects -->

    <bean id="monitoraspect" class="fr.treeptik.aop.MonitorAspect">
        <property name="clientService" ref="clientService" />
    </bean>

    <!-- Création de l'aspect référencé au niveau de la classe MonitorAspect.java, appelé au niveau du point-cut "clientService" à chaque fois que la méthode       "save" retourne un résultat -->

    <aop:config>
        <aop:aspect id="myAspect" ref="monitoraspect">

            <!-- L'expression "expression="execution(* fr.treeptik.service.*.save(..)" signifie qu'un point-cut (interception) se fera au niveau de la méthode           "save" de toutes les classes contenues dans le package "fr.treeptik.service -->

            <aop:pointcut id="businessService"
                          expression="execution(* com.projet.ecommerce.*.save(..)) " />

            <!-- APrès l'appel de la méthode save, la méthode afterReturning est appelée et le résultat de la méthode save (result) lui est passé en argument -->

            <aop:after-returning pointcut-ref="businessService"
                                 method="afterReturning" returning="result" />

        </aop:aspect>
    </aop:config>

    <!-- ... -->
    <!-- ... -->
    <!-- ... -->
    <!-- ... -->

</beans>

